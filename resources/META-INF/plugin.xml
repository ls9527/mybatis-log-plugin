<idea-plugin>
    <id>MyBatisCodeHelperLogPlugin</id>
    <name>MyBatisCodeHelperLogPlugin</name>
    <version>2.1.1</version>
    <vendor email="gejun123456@gmail.com" url="">gejun123456@gmail.com</vendor>
    <description>
    <![CDATA[
      The plugin is forked from MyBatis Log Plugin gpl license code, Add function for sql execute, Highlight.
      插件来源于MybatisLogPlugin之前gpl协议的代码,添加了sql执行，sql语句高亮功能。
      <br/>
      -----------------------------------------------------------------------------------------------------------------------
      <br/>
      Restore the mybatis generate sql to original whole sql.<br/>
      It will generate sql statements with replace ? to the really param value.<br/>
      Through the "Tools -> MyBatis Log Plugin" menu you can tail the sql log.<br/>
      You can selected the "Filter" button on the left to filter the contents don't wanna display.<br/>
      You can selected the "Format Sql" button on the left to format the generate sql statements.<br/>
      You can select the console sql log and right click "Restore Sql from Selection" menu to restore sql.<br/>
      Prerequisite: sql log must contain "Preparing:" and "Parameters:" <br/>
      -----------------------------------------------------------------------------------------------------------------------
      <br/>
      把 mybatis 输出的sql日志还原成完整的sql语句。<br/>

    ]]>
    </description>

    <change-notes>
       添加console中的sql直接点击执行，Intellij高级版解析出的sql有语法高亮
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products-->
    <depends>com.intellij.modules.lang</depends>
    <!--    <depends>com.intellij.modules.java</depends>-->
    <depends>com.intellij.database</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <consoleFilterProvider implementation="mybatis.mylog.MybatisLogProvider"/>
<!--        <executor implementation="mybatis.log.tail.TailRunExecutor" id="MyBatisLogTail"/>-->
<!--        <postStartupActivity implementation="mybatis.log.MyBatisLogStartupActivity"/>-->
        <toolWindow id="Mybatis Sql" secondary="true" anchor="bottom"
                    factoryClass="mybatis.mylog.action.MybatisLogToolWindow"/>
        <projectService serviceImplementation="mybatis.mylog.action.MybatisLogProjectService"/>
        <postStartupActivity implementation="mybatis.mylog.MyBatisLogStartupActivity"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="TailMyBatisCodeHelperLog" class="mybatis.mylog.action.TailMyBatisLog">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift M"/>
        </action>

        <!-- restore sql from selection -->
        <action class="mybatis.mylog.action.RestoreSqlForSelection" id="RestoreMybatisSql" text="Restore Sql from Selection"
                description="Restore sql from selection">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ConsoleEditorPopupMenu" anchor="before" relative-to-action="ConsoleView.ClearAll"/>
        </action>
    </actions>

</idea-plugin>
